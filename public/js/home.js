/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/home.js":
/*!******************************!*\
  !*** ./resources/js/home.js ***!
  \******************************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/**\n * @author Maximilian Mewes\n *\n *\n */\n\n$(function () {\n  var popoverTriggerList = $('[data-bs-toggle=\"popover\"]');\n  var popoverList = _toConsumableArray(popoverTriggerList).map(function (popoverTriggerEl) {\n    return new bootstrap.Popover(popoverTriggerEl, {\n      html: true,\n      title: function title() {\n        var date = moment(popoverTriggerEl.getAttribute('data-bl-date'));\n        return 'Status Ã¤ndern vom ' + date.format('DD.MM.YYYY');\n      },\n      content: function content() {\n        var date = moment(popoverTriggerEl.getAttribute('data-bl-date'));\n        var type = popoverTriggerEl.classList.contains(\"check\") ? 'available' : popoverTriggerEl.classList.contains(\"unkown\") ? 'maybe' : popoverTriggerEl.classList.contains(\"x\") ? 'noTime' : null;\n        var container = document.createElement(\"div\");\n        container.classList.add('d-flex', 'justify-center');\n        container.id = \"timetable-container\";\n        var formContainer = document.createElement(\"form\");\n        formContainer.classList.add('justify-center');\n        formContainer.setAttribute('style', 'display: flex;');\n        formContainer.id = \"timetable-form\";\n        var baseInput = document.createElement(\"input\");\n        baseInput.type = \"radio\";\n        baseInput.classList.add('btn-check');\n        baseInput.name = \"baseBtn\";\n        baseInput.id = \"baseBtn\";\n        baseInput.autocomplete = 'off';\n        var baseLabel = document.createElement(\"label\");\n        baseLabel.classList.add('btn', 'timetable-btn');\n        baseLabel[\"for\"] = \"baseBtn\";\n        baseLabel.innerHTML = 'baseLabel';\n\n        // Button Available\n        var btnAvailable = baseInput.cloneNode(true);\n        btnAvailable.name = \"btn\";\n        btnAvailable.id = \"btnAvailable\";\n        btnAvailable.checked = type == \"available\";\n        var labelAvailable = baseLabel.cloneNode(true);\n        labelAvailable.classList.add('btn-success');\n        labelAvailable.innerHTML = '<i class=\"fa-solid fa-check\"></i>';\n        labelAvailable.setAttribute('for', \"btnAvailable\");\n        formContainer.appendChild(btnAvailable);\n        formContainer.appendChild(labelAvailable);\n\n        // Button Maybe\n        var btnMaybe = baseInput.cloneNode(true);\n        btnMaybe.name = \"btn\";\n        btnMaybe.id = \"btnMaybe\";\n        btnMaybe.checked = type == \"maybe\";\n        var labelMaybe = baseLabel.cloneNode(true);\n        labelMaybe.classList.add('btn-warning');\n        labelMaybe.innerHTML = '<i class=\"fa-solid fa-question\"></i>';\n        labelMaybe.setAttribute('for', \"btnMaybe\");\n        formContainer.appendChild(btnMaybe);\n        formContainer.appendChild(labelMaybe);\n\n        // Button Maybe\n        var btnNoTime = baseInput.cloneNode(true);\n        btnNoTime.name = \"btn\";\n        btnNoTime.id = \"btnNoTime\";\n        btnNoTime.checked = type == \"noTime\";\n        var labelNoTime = baseLabel.cloneNode(true);\n        labelNoTime.classList.add('btn-danger');\n        labelNoTime.innerHTML = '<i class=\"fa-solid fa-xmark\"></i>';\n        labelNoTime.setAttribute('for', \"btnNoTime\");\n        formContainer.appendChild(btnNoTime);\n        formContainer.appendChild(labelNoTime);\n        $(formContainer).children('label').each(function (k, e) {\n          $(e).on('click', function (el) {\n            var status = e.getAttribute('for') == \"btnAvailable\" ? 'available' : e.getAttribute('for') == \"btnMaybe\" ? 'maybe' : e.getAttribute('for') == \"btnNoTime\" ? 'noTime' : null;\n            $.ajax({\n              url: '/api/v1/timetable/' + date.format('YYYY-MM-DD'),\n              method: 'PUT',\n              data: {\n                status: status\n              },\n              beforeSend: function beforeSend() {\n                $('#timetable-form').hide();\n                $('#loadingSpinnerContainer').show();\n              },\n              success: function success(response) {\n                // looks kinda weird when this switch happens and the popover gets closed right after that\n                // $('#timetable-form').show();\n                // $('#loadingSpinnerContainer').hide();\n\n                var cl = response.data.status == 'available' ? 'check' : response.data.status == 'maybe' ? 'unkown' : response.data.status == 'noTime' ? 'x' : null;\n                $(popoverTriggerEl).removeClass('x check unkown');\n                $(popoverTriggerEl).addClass(cl);\n                $(popoverTriggerEl).popover('hide');\n              },\n              error: function error(jqXHR, textStatus, errorThrown) {\n                // console.log(errorThrown);\n                // handle the error case\n              }\n            });\n          });\n        });\n        var loadingSpinnerContainer = document.createElement(\"div\");\n        loadingSpinnerContainer.setAttribute('style', 'display: none;font-size:2rem;');\n        loadingSpinnerContainer.id = 'loadingSpinnerContainer';\n        var loadingSpinner = document.createElement(\"i\");\n        loadingSpinner.classList.add('fa-solid', 'fa-spinner', 'fa-spin-pulse');\n        loadingSpinnerContainer.appendChild(loadingSpinner);\n        container.appendChild(formContainer);\n        container.appendChild(loadingSpinnerContainer);\n        return container;\n      }\n    });\n  });\n\n  // Make sure only one popover is active at one time\n  // [...popoverTriggerList].map(popoverTriggerEl => $(popoverTriggerEl).on('click', function (e)\n  //     {\n  //         $('.timetable-popover').not(this).popover('hide');\n  //     }));\n\n  //  Source:: https://stackoverflow.com/questions/11703093/how-to-dismiss-a-twitter-bootstrap-popover-by-clicking-outside\n  $('body').on('click', function (e) {\n    //     //did not click a popover toggle, or icon in popover toggle, or popover\n    //     if ($(e.target).data('toggle') !== 'popover'\n    //         && $(e.target).parents('[data-bs-toggle=\"popover\"]').length === 0\n    //         && $(e.target).parents('.popover.in').length === 0) {\n    //         $('[data-bs-toggle=\"popover\"]').popover('hide');\n    //     }\n    $('[data-bs-toggle=\"popover\"]').each(function () {\n      //the 'is' for buttons that trigger popups\n      //the 'has' for icons within a button that triggers a popup\n      if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {\n        $(this).popover('hide');\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/home.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/home.js"]();
/******/ 	
/******/ })()
;